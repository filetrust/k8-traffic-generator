---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-deployment-config
  namespace: elk
  labels:
    k8s-app: metricbeat
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false

    processors:
      - add_cloud_metadata:

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch-master}:${ELASTICSEARCH_PORT:9200}']
      # username: ${ELASTICSEARCH_USERNAME}
      # password: ${ELASTICSEARCH_PASSWORD}
    setup.dashboards.enabled: true
    setup.kibana:
      host: "kibana-kibana:5601"
      kibana.protocol: "http"
      # username: givemeusername
      # password: givemepassword
    setup.template.settings:
      index.number_of_shards: 5
      index.number_of_replicas: 1
      index.number_of_routing_shards: 30
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-deployment-modules
  namespace: elk
  labels:
    k8s-app: metricbeat
data:
  # This module requires `kube-state-metrics` up and running under `kube-system` namespace
  kubernetes.yml: |-
    - module: kubernetes
      enabled: true
      metricsets:
        - state_node
        - state_deployment
        - state_replicaset
        - state_statefulset
        - state_pod
        - state_container
        - state_cronjob
        - state_resourcequota
        - state_service
        - state_persistentvolume
        - state_persistentvolumeclaim
        - state_storageclass
        # - event
      period: 10s
      host: ${NODE_NAME}
      hosts: ["kube-state-metrics.kube-system:8080"]
    - module: kubernetes
      enabled: true
      metricsets:
        - apiserver
      hosts: ["https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"]
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      ssl.certificate_authorities:
        - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      period: 30s
    - module: kubernetes
      enabled: true
      ssl.certificate_authorities:
        - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      ssl.verification_mode: none
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      metricsets:
        - controllermanager
      hosts: ["https://localhost:10257"]
      peroid: 20s
    - module: kubernetes
      enabled: true
      ssl.certificate_authorities:
        - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      ssl.verification_mode: none
      metricsets:
        - scheduler
      hosts: ["https://localhost:10259"]
      peroid: 30s
    
---
# Deploy singleton instance in the whole cluster for some unique data sources, like kube-state-metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metricbeat
  namespace: elk
  labels:
    k8s-app: metricbeat
spec:
  selector:
    matchLabels:
      k8s-app: metricbeat
  template:
    metadata:
      labels:
        k8s-app: metricbeat
    spec:
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dedicated
                operator: In
                values: ["master"]
      serviceAccountName: metricbeat
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:7.9.1
        # command: ['sh', '-c', 'echo "Hello, Kubernetes!" && sleep 3600']
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: elasticsearch-master
        - name: ELASTICSEARCH_PORT
          value: "9200"
        # - name: ELASTICSEARCH_USERNAME
        #   value: elastic
        # - name: ELASTICSEARCH_PASSWORD
        #   value: changeme
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", 'find /usr/share/metricbeat/kibana -type f !  \( -name "*-kubernetes-*" -o -name "*-system-*" -o -name "*-host-*" -o -name "*-containers-*" \) -exec rm -f {} +']
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
        # - name: dashboard
        #   mountPath: /usr/share/metricbeat/dashboard/7/dashboard/Metricbeat-containers-overview.json
        #   subPath: Metricbeat-containers-overview.json
      volumes:
      - name: config
        configMap:
          defaultMode: 0640
          name: metricbeat-deployment-config
      - name: modules
        configMap:
          defaultMode: 0640
          name: metricbeat-deployment-modules
      # - name: dashboard
      #   configMap:
      #     name: dashboard
      #     items:
      #       - key: Metricbeat-containers-overview.json
      #         path: Metricbeat-containers-overview.json
            # - key: Metricbeat-kubernetes-apiserver.json
            #   path: Metricbeat-kubernetes-apiserver.json
            # - key: Metricbeat-kubernetes-proxy.json
            #   path: Metricbeat-kubernetes-proxy.json
            # - key: Metricbeat-host-overview.json
            #   path: Metricbeat-host-overview.json
            # - key: Metricbeat-kubernetes-controller-manager.json
            #   path: Metricbeat-kubernetes-controller-manager.json
            # - key: Metricbeat-kubernetes-scheduler.json
            #   path: Metricbeat-kubernetes-scheduler.json
            # - key: Metricbeat-Host-Services-overview.json
            #   path: Metricbeat-Host-Services-overview.json
            # - key: Metricbeat-kubernetes-overview.json
            #   path: Metricbeat-kubernetes-overview.json
            # - key: Metricbeat-system-overview.json
            #   path: Metricbeat-system-overview.json
---
